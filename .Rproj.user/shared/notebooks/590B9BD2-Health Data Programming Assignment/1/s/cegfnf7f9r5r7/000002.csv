"0","full_ui <- cleaned_admission %>%"
"0","  full_join(cleaned_deaths)"
"1","[38;5;255mJoining, by = c(""year"", ""hbr"", ""ca"", ""age_group"", ""sex"", ""injury_type"", ""injury_location"")[39m
"
"0","#full_join() used to merge cleaned datasets together. full_join() keeps values from both, easier to observe inconsistencies."
"0",""
"0","full_ui_hb <- full_ui %>% "
"0","  full_join(cleaned_hb, by = c(""hbr"" = ""hb""))"
"0",""
"0","#full_join() of final dataset. All datasets are now merged."
"0",""
"0","# glimpse(full_ui_hb)"
"0",""
"0","# is.na(full_ui_hb)"
"0",""
"0",""
"0","clean_full_ui <- full_ui_hb %>% "
"0","  select(year,"
"0","      hbr,"
"0","      hb_name,"
"0","      age_group,"
"0","      sex,"
"0","      injury_type,"
"0","      injury_location,"
"0","      number_of_admissions,"
"0","      numberof_deaths)  %>% "
"0","  mutate(numberof_deaths = coalesce(numberof_deaths, 0)) %>% "
"0","  mutate(across(c(injury_location), na_if, ""Not Applicable"")) %>% "
"0","  mutate(across(c(number_of_admissions), na_if, 0)) %>% "
"0","  na.omit(clean_full_ui) %>% "
"0","  group_by(sex, age_group, injury_type, injury_location, year, hbr, hb_name) %>% "
"0","  summarise(across(c(number_of_admissions, numberof_deaths), sum)) %>% "
"0","  arrange(age_group) %>% "
"0","  distinct() %>% "
"0","  rowid_to_column()"
"1","[38;5;255m`summarise()` has grouped output by 'sex', 'age_group', 'injury_type', 'injury_location', 'year', 'hbr'. You
can override using the `.groups` argument.[39m
"
"0","#Tidying and wrangling process to make data set ready for plotting."
"0",""
"0","#Final modifications and wrangling of data."
"0","#Selected relevant columns for data plotting."
"0","#Mutate() and Coalesce() to change NA values in numberof_deaths column to numerical value 0."
"0","#Mutate(), across() to na_if functions to change character value ""Not Applicable"" to null value in column 7."
"0","#na.omit() to omit null, incomplete data present in merged data."
"0","#rowid_to_column() to number each line of the dataset for navigation and ease of use by adding integer column."
"0","#group_by() to organise the columns into a desired order"
"0",""
"0","#This dataset is cleaned and ready to be observed for any last discrepancies before being plotted. "
